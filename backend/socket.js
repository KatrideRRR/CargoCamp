const socketIo = require('socket.io');
let io;
let users = {}; // –•—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–¥–∫–ª—é—á–∏–≤—à–∏—Ö—Å—è –∫ WebSocket

function initializeSocket(server) {
    io = socketIo(server, {
        cors: {
            origin: "*",
            methods: ["GET", "POST"]
        }
    });

    io.on('connection', (socket) => {
        console.log(`üü¢ –ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ${socket.id}`);

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–∫–µ—Ç–∞—Ö
        socket.on('register', (userId) => {
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ WebSocket`);
            socket.join(`user_${userId}`); // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ —Å –µ–≥–æ ID
        });

        // –ü—Ä–æ—á–∏–µ —Å–æ–±—ã—Ç–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —á–∞—Ç–æ–≤
        socket.on('joinChat', ({ userId }) => {
            users[userId] = socket.id;
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è: ${socket.id}`);
        });

        socket.on('sendMessage', (message) => {
            console.log('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);

            if (users[message.receiverId]) {
                io.to(users[message.receiverId]).emit('receiveMessage', message);
            }
        });

        socket.on('disconnect', () => {
            console.log(`üî¥ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ: ${socket.id}`);
            Object.keys(users).forEach(userId => {
                if (users[userId] === socket.id) {
                    delete users[userId];
                }
            });
        });
    });

    return io;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–∫–∞–∑—á–∏–∫—É –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
function sendNotification(userId, event, data) {
    if (io) {
        io.to(`user_${userId}`).emit(event, data);
    }
}

module.exports = { initializeSocket, sendNotification };
